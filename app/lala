package com.example.mygame;

import androidx.appcompat.app.AppCompatActivity;

import android.animation.AnimatorListenerAdapter;
import android.animation.ValueAnimator;
import android.content.Context;
import android.graphics.Point;
import android.graphics.Rect;
import android.media.Image;
import android.net.sip.SipSession;
import android.os.Bundle;
import android.os.Handler;
import android.view.Display;
import android.view.MotionEvent;
import android.view.View;
import android.view.WindowManager;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Timer;


public class TheGame extends AppCompatActivity {
    final int IMAGE_SIZE=130;
    private ImageView player;
    private ImageView life1;
    private ImageView life2;
    private ImageView life3;

    private TextView scoreLabel;
    private RelativeLayout layout;

    private int screenWidth;
    private int screenHeight;
    @Override
    protected void onCreate(final Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_game);
        scoreLabel = (TextView) findViewById(R.id.scoreText);
        player = (ImageView) findViewById(R.id.playerView);
        layout = (RelativeLayout) findViewById(R.id.big_layout);
        life1= (ImageView) findViewById(R.id.life1);
        life2= (ImageView) findViewById(R.id.life2);
        life3= (ImageView) findViewById(R.id.life3);
        //get screen size
        screenWidth = getScreenWidth();
        screenHeight = getScreenHeight();
        final Handler handler = new Handler();
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                createBalls();
                handler.postDelayed(this,1000);
            }
        };
        handler.postDelayed(runnable,1000);
        }




    @Override
    public boolean onTouchEvent(MotionEvent event) {
       if(event.getAction() == MotionEvent.ACTION_MOVE && event.getX() < screenWidth-player.getWidth()){
           player.setX(event.getX());
       }
       return true;

    }

    public void fallDown(ImageView im) {
        Animation transAnim = new TranslateAnimation(0, 0, -500, screenHeight /1);
        transAnim.setDuration(8000);
        transAnim.setFillAfter(true);
        im.startAnimation(transAnim);
    }

    public int getScreenHeight() {
        return layout.getResources().getDisplayMetrics().heightPixels;
    }

    public int getScreenWidth() {
        WindowManager wm = getWindowManager();
        Display disp = wm.getDefaultDisplay();
        final Point size = new Point();
        disp.getSize(size);
        return size.x;
    }

    public void createBalls(){
        ImageView[] image = new ImageView[3];
        float currentLocationX = padding();
        for(int i = 0; i < image.length; i++){
            image[i] = new ImageView(this);
            image[i].setImageResource(R.drawable.circle);
            image[i].setLayoutParams(new android.view.ViewGroup.LayoutParams(IMAGE_SIZE,IMAGE_SIZE));
            image[i].setY(0);
            image[i].setX(currentLocationX);
            currentLocationX = currentLocationX + ScreenDivision();
            if (i%3==0 && i!=0) {
                currentLocationX = 0;
            }
            layout.addView(image[i]);
        }
        int count=num_of_balls();
        if(count==1){
            int randPos=random_position();
            image[0].setVisibility(View.INVISIBLE);
            image[1].setVisibility(View.INVISIBLE);
            image[2].setVisibility(View.INVISIBLE);
            image[randPos].setVisibility(View.VISIBLE);
            fallDown(image[randPos]);
        }
        if(count==2){
            int r1=random_position();
            int r2=random_position();
            image[0].setVisibility(View.INVISIBLE);
            image[1].setVisibility(View.INVISIBLE);
            image[2].setVisibility(View.INVISIBLE);
            image[r1].setVisibility(View.VISIBLE);
            image[r2].setVisibility(View.VISIBLE);
            fallDown(image[r1]);
            fallDown(image[r2]);
        }
    }

    public float padding(){
        int space = screenWidth-(3*IMAGE_SIZE);
        return ((space/2)-(IMAGE_SIZE*2));
    }

    public float ScreenDivision() {
        return screenWidth / 3;
    }

    public int num_of_balls(){
        List<Integer> locationX = Arrays.asList(1, 2);
        Random rand = new Random();
        int count = locationX.get(rand.nextInt(locationX.size()));
        return count;
    }

    public int random_position(){
     //   List<Integer> locationX = Arrays.asList(0, getScreenWidth() / 3, (2 * getScreenWidth()) / 3);
        List<Integer> locationX = Arrays.asList(0,1,2);
        Random rand = new Random();
        int locX = locationX.get(rand.nextInt(locationX.size()));
        return locX;
    }
}